package com.clinica.clinica_app;

import java.time.LocalDate;
import java.util.List;
import java.util.Scanner;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import com.clinica.clinica_app.models.Role;
import com.clinica.clinica_app.models.User;
import com.clinica.clinica_app.services.UserService;

@SpringBootApplication
public class ClinicaApp implements CommandLineRunner {

    @Autowired
    private UserService userService;

    public static void main(String[] args) {
        SpringApplication.run(ClinicaApp.class, args);
    }

    @Override
    public void run(String... args) {
        Scanner scanner = new Scanner(System.in);
        boolean running = true;

        while (running) {
            System.out.println("\nüìã Men√∫ de Usuarios ROL: RH");
            System.out.println("1. Crear usuario");
            System.out.println("2. Listar usuarios");
            System.out.println("3. Eliminar usuario");
            System.out.println("4. Salir");
            System.out.print("Seleccione una opci√≥n: ");
            int option = scanner.nextInt();
            scanner.nextLine(); // consume newline

            switch (option) {
                case 1 -> {
                    System.out.print("Ingrese nombre completo: ");
                    String firstName = scanner.nextLine();
                    System.out.print("Ingrese apellido: ");
                    String lastName = scanner.nextLine();
                    System.out.print("Ingrese correo: ");
                    String email = scanner.nextLine();
                    System.out.print("Ingrese contrase√±a: ");
                    String password = scanner.nextLine();
                    System.out.print("Ingrese rol (HUMAN_RESOURCES, ADMINISTRATIVE, NURSE, DOCTOR): ");
                    String roleInput = scanner.nextLine();
                    Role role = Role.valueOf(roleInput.toUpperCase());

                    System.out.print("Ingrese c√©dula: ");
                    String documentId = scanner.nextLine();
                    System.out.print("Ingrese fecha de nacimiento (YYYY-MM-DD): ");
                    LocalDate birthDate = LocalDate.parse(scanner.nextLine());
                    System.out.print("Ingrese g√©nero: ");
                    String gender = scanner.nextLine();
                    System.out.print("Ingrese direcci√≥n: ");
                    String address = scanner.nextLine();
                    System.out.print("Ingrese tel√©fono: ");
                    String phoneNumber = scanner.nextLine();

                    User user = userService.createUser(firstName, lastName, email, password, role, documentId,
                            birthDate, gender, address, phoneNumber);
                    System.out.println("‚úÖ Usuario creado con ID: " + user.getId());
                }
                case 2 -> {
                    List<User> users = userService.getAllUsers();
                    System.out.println("üìÑ Lista de usuarios registrados:");

                    for (User u : users) {
                        System.out.println("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ");
                        System.out.println("ID: " + u.getId());
                        System.out.println("Nombre: " + u.getFirstName() + " " + u.getLastName());
                        System.out.println("Correo: " + u.getEmail());
                        System.out.println("Rol: " + u.getRole());
                        System.out.println("C√©dula: " + u.getDocumentId());
                        System.out.println("Fecha de nacimiento: " + u.getBirthDate());
                        System.out.println("G√©nero: " + u.getGender());
                        System.out.println("Direcci√≥n: " + u.getAddress());
                        System.out.println("Tel√©fono: " + u.getPhoneNumber());
                    }

                    if (users.isEmpty()) {
                        System.out.println("‚ö†Ô∏è No hay usuarios registrados.");
                    }
                }

                case 3 -> {
                    System.out.print("Ingrese el ID del usuario a eliminar: ");
                    Long id = scanner.nextLong();
                    scanner.nextLine(); // consume newline
                    boolean deleted = userService.deleteUserById(id);
                    if (deleted) {
                        System.out.println("üóëÔ∏è Usuario eliminado.");
                    } else {
                        System.out.println("‚ö†Ô∏è Usuario no encontrado.");
                    }
                }
                case 4 -> {
                    System.out.println("üëã Saliendo...");
                    running = false;
                }
                default -> System.out.println("‚ùå Opci√≥n inv√°lida.");
            }
        }
    }
}

Organizame este codigo para que me pregunte si soy de RH (me muestre las opciones que te compart√≠) admin, me preguntes si quiero registrar pacientes y programar citas. si mi rol es Enfermera muestrame este men√∫
 
-registro de visitas de pacientes
 
	-registrar datos vitales de los pacientes
	-registrar los medicamentos administrados
	-procedimientos
	-observaci√≥n relevante
 
-historial de visitas de pacientes
si soy  M√©dico me pregunte este men√∫
 
-ver la historia cl√≠nica
 
-crear registros m√©dicos de los pacientes
		-diagn√≥sticos
		-tratamientos
		-resultados de pruebas
		-prescripciones 
		-informaci√≥n relevante
Con todos loe metodos, atributos clases en ingl√©s, pero las entradas y salidas a los usuarios en espa√±ol